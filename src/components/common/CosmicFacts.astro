---
import { getRotatingFacts } from '../../data/facts';

const facts = getRotatingFacts(5);
---

<div class="fixed bottom-0 left-0 right-0 bg-gray-900/80 backdrop-blur-sm border-t border-gray-800 z-40">
  <div class="relative flex items-center h-12">
    <!-- Quiz Launch Button -->
    <div class="absolute left-0 top-0 bottom-0 flex items-center px-4 bg-cosmic-600 cursor-pointer group z-20" id="quiz-launcher">
      <div class="flex items-center gap-2">
        <span class="text-lg">ðŸŽ¯</span>
        <span class="text-white font-medium whitespace-nowrap">Test Your Knowledge</span>
        <svg 
          class="w-4 h-4 text-white transition-transform group-hover:translate-x-1" 
          fill="none" 
          stroke="currentColor" 
          viewBox="0 0 24 24"
        >
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
        </svg>
      </div>
    </div>

    <!-- Gradient Overlays -->
    <div class="absolute inset-y-0 left-[180px] w-20 bg-gradient-to-r from-gray-900 to-transparent z-10"></div>
    <div class="absolute inset-y-0 right-0 w-20 bg-gradient-to-l from-gray-900 to-transparent z-10"></div>
    
    <!-- Facts Ticker -->
    <div class="flex items-center h-full pl-[200px] animate-ticker">
      {facts.map(({ fact, icon }) => (
        <div class="flex items-center flex-none px-8 group">
          <span class="text-lg mr-3">{icon}</span>
          <span class="text-cosmic-200 whitespace-nowrap text-sm">{fact}</span>
        </div>
      ))}
      {/* Duplicate facts for seamless loop */}
      {facts.map(({ fact, icon }) => (
        <div class="flex items-center flex-none px-8 group">
          <span class="text-lg mr-3">{icon}</span>
          <span class="text-cosmic-200 whitespace-nowrap text-sm">{fact}</span>
        </div>
      ))}
    </div>

    <!-- Quick Quiz Modal -->
    <div id="quick-quiz-modal" class="fixed inset-0 bg-gray-900/80 backdrop-blur-md flex items-center justify-center z-50 opacity-0 pointer-events-none transition-opacity duration-300">
      <div class="bg-gray-800 rounded-xl p-8 max-w-lg w-full mx-4 transform translate-y-8 transition-transform duration-300">
        <div class="flex justify-between items-center mb-6">
          <h3 class="text-xl font-bold text-white">Quick Cosmic Quiz</h3>
          <button id="close-quiz" class="text-gray-400 hover:text-white">
            <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
            </svg>
          </button>
        </div>
        
        <div id="quiz-content" class="space-y-6">
          <!-- Quiz content will be injected here -->
        </div>
      </div>
    </div>
  </div>
</div>

<style>
  @keyframes ticker {
    0% { transform: translateX(0); }
    100% { transform: translateX(-50%); }
  }

  .animate-ticker {
    animation: ticker 60s linear infinite;
  }

  .animate-ticker:hover {
    animation-play-state: paused;
  }
</style>

<script>
class QuickQuiz {
  constructor() {
    this.questions = [
      {
        question: "What is the closest star to Earth?",
        answers: ["Proxima Centauri", "Alpha Centauri", "The Sun", "Sirius"],
        correct: 2,
        explanation: "The Sun is our closest star, at about 93 million miles away!"
      },
      {
        question: "How many planets are in our solar system?",
        answers: ["7", "8", "9", "10"],
        correct: 1,
        explanation: "Since 2006, we officially have 8 planets (sorry, Pluto!)."
      },
      {
        question: "What causes the seasons on Earth?",
        answers: ["Distance from Sun", "Earth's tilt", "Sun's temperature", "Moon's gravity"],
        correct: 1,
        explanation: "Earth's 23.5-degree tilt causes our seasons as we orbit the Sun."
      }
    ];
    
    this.currentQuestion = null;
    this.modal = document.getElementById('quick-quiz-modal');
    this.content = document.getElementById('quiz-content');
    
    this.setupEventListeners();
  }

  setupEventListeners() {
    document.getElementById('quiz-launcher')?.addEventListener('click', () => this.openQuiz());
    document.getElementById('close-quiz')?.addEventListener('click', () => this.closeQuiz());
  }

  openQuiz() {
    if (this.modal) {
      this.modal.classList.remove('opacity-0', 'pointer-events-none');
      this.modal.querySelector('.bg-gray-800')?.classList.remove('translate-y-8');
      this.startQuiz();
    }
  }

  closeQuiz() {
    if (this.modal) {
      this.modal.classList.add('opacity-0', 'pointer-events-none');
      this.modal.querySelector('.bg-gray-800')?.classList.add('translate-y-8');
    }
  }

  startQuiz() {
    this.currentQuestion = this.questions[Math.floor(Math.random() * this.questions.length)];
    this.showQuestion();
  }

  showQuestion() {
    if (!this.content) return;

    this.content.innerHTML = `
      <p class="text-lg text-white mb-4">${this.currentQuestion.question}</p>
      <div class="grid grid-cols-2 gap-3">
        ${this.currentQuestion.answers.map((answer, index) => `
          <button 
            class="p-3 bg-gray-700 text-white rounded-lg hover:bg-cosmic-600 transition-colors text-sm answer-button"
            data-index="${index}"
          >
            ${answer}
          </button>
        `).join('')}
      </div>
    `;

    this.content.querySelectorAll('.answer-button').forEach(button => {
      button.addEventListener('click', () => this.handleAnswer(parseInt(button.dataset.index || '0')));
    });
  }

  handleAnswer(answerIndex: number) {
    const isCorrect = answerIndex === this.currentQuestion.correct;
    
    if (!this.content) return;

    this.content.innerHTML = `
      <div class="text-center">
        <div class="text-4xl mb-4">${isCorrect ? 'ðŸŽ‰' : 'ðŸ¤”'}</div>
        <p class="text-lg text-white mb-4">
          ${isCorrect ? 'Correct!' : 'Not quite right!'}
        </p>
        <p class="text-cosmic-300 mb-6">${this.currentQuestion.explanation}</p>
        <div class="flex justify-center gap-4">
          <button id="try-another" class="px-4 py-2 bg-cosmic-600 text-white rounded-lg hover:bg-cosmic-700 transition-colors">
            Try Another
          </button>
          <a href="/play" class="px-4 py-2 bg-gray-700 text-white rounded-lg hover:bg-gray-600 transition-colors">
            Play Full Game
          </a>
        </div>
      </div>
    `;

    document.getElementById('try-another')?.addEventListener('click', () => this.startQuiz());
  }
}

// Initialize quiz when the DOM is loaded
document.addEventListener('DOMContentLoaded', () => {
  new QuickQuiz();
});
</script>